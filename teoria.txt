
DAO: Comunicaci—n con con la base de datos
DTO: Data Transfer Object. Es lo que quiero mostrar de nuestro modelo(MODEL en la BD)

JPA: Es el mapeo. Para mantener la independencia del ORM.
Hibernate: Es un ORM

RESTFULL

	La app consume JSON con AngularJS.
	Creamos la app de java con sus clases para levantar la BD.

La aplicación es una biblioteca.

Persona:

	Usuario
	Empleados
	Libros
	Alquiler
	Sala
	Estantería

BackLog:

Dar de alta usuario
Dar de baja usuario
Buscar por autor
Buscar alquiler por fecha
Alta libro
Baja libro
Realizar alquiler
Buscar retrasos
Buscar usuario por DNI
Buscar libros por salas
Byscar libros por estantería
Comprobar estado del alquiler
Alta empleado
Baja empleado
Devolver libro
Comprobar estado usuario
Buscar libro por ISBN
Comprobar historial usuario

Prioridad:

Dar alta libro : 10
Dar alta usuario : 20
Alquiler libro : 30
Devolver libro : 40
Buscar libro (nombre, ISBN, autor): 50
Comprobar estado alquiler : 60
Buscar retrasos : 70
Comprobar estado usuario : 80
Dar de alta emleado : 90

drop database library; create database library; use library;
show databases
show tables




@manytoone
private List<Rent> rent = ArrayList<>();

6 tipos de JSON
Dentro de un JSON puede ir:
Array
String
Entero
Decimal
Otro JSON
Date
JSON


------------------

en yml puedes poner createdrop y para pruebas. Nunca para pruebas.
y tambien se configura para que no sea necesario levantar la MySQL en fisico sino en memoria.



PROFILE: Para elegir un profaile debemos tener configurado el yml con los diferentes perfiles y en el RUN
escoges el que quieres para el RUN.  -Dspring.profiles.active::local

Para levantar la app con Gradle compilamos el .jar pasandole el argumento con -D[elperfil]


Transnacional RollBackon para que si falla algo se cancela cualquier parte de la APP.

ÑÑ SPRINGCORE: Spring no trabaja con clases. Trabaja con interface y nosotros la implementamos.

	Anotaciones:

		@Repository: Esto son los DAO. Es para indicarle a Spring que esto es un DAO.
		@Service: Esto es un servicio. Es para indicarle a Spring que es un Service. Se pone arriba del nombre.

		@Component: Es un servicio disponible en todas las capas.


		@Autowired: Si tienes un un Service

		@Qualifer








